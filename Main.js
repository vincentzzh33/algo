//基类
import {DataStore} from "./js/base/DataStore.js";
import {ResourceLoader} from "./js/base/ResourceLoader.js";
import {Director} from "./js/Director.js";
import {AlgoVisHelper} from "./js/base/AlgoVisHelper.js";
//动画需要的类
//import {Score} from "./js/player/Score.js";
//import {Snake} from "./js/player/Snake.js";
//import {Tank} from "./js/player/Tank.js";
import {Circle} from "./js/player/Circle.js";//画圆
//辅助类,得到用户,ajax请求等
//import {User} from "./js/runtime/User.js";

export class Main {
    constructor() {
        //console.log('Vincent');
//		new ResourceLoader();
//		console.log(new ResourceLoader().map);
//		this.canvas = wx.createCanvas();
        this.canvas = document.getElementById('game');
        this.canvas.width = window.innerWidth;
        this.canvas.height = window.innerHeight;
        this.ctx = this.canvas.getContext('2d');
        this.dataStore = DataStore.getInstance();
        this.dataStore.ctx = this.ctx;
        this.dataStore.canvas = this.canvas;
        this.dataStore.algoVisHelper = AlgoVisHelper.getInstance();//这两个不能反
        this.director = Director.getInstance();//这两个不能反

        const resourceLoader = ResourceLoader.getInstance();
        //resourceLoader.onLoaded(map=>this.onResourceFirstLoaded(map));
        resourceLoader.onLoaded(map=>this.onResourceFirstLoaded(map));
    }

    onResourceFirstLoaded(map) {
        //测试下有没有拿到对象

        //var bg1 = map.get('startButton');
        //this.ctx.drawImage(
        //	bg1,
        //	0,0,bg1.width,bg1.height,
        //	0,0,bg1.width,bg1.height
        //);
        this.dataStore.resource = map;//存放图片资源
        this.init();//如果不是在这里,图片会没有加载完毕
    }

    init() {
        //console.log(typeof BackGround);
        //this.director.isGameOver = true;//首先重置游戏是没有结束的
        //User.getUserInfo(function(mes){
        //    console.log('mes'+mes);
        //    wx.request({
        //        url:'http://www.tp5.net/snake/user/add',
        //        data:mes,
        //        method:'POST',
        //        success:(res)=>{
        //            console.log(res);
        //        },
        //        fail:(res)=>{
        //            console.log(res);
        //        }
        //    });
        //
        //});
        //把类存储起来,实例化对象,非单例
        //this.dataStore
        //.put('score', Score)
        //.put('snake', Snake)
        //.put('tank', Tank)
        //.put('circle', Circle);

        //这里开始游戏,逻辑在导演类中

        //test测试基类
        //this.director.test();

        //初始化数据
        //1.
        //let money = [];//new Array(100);
        //for(let i=0;i<100;i++){
        //    //money[i]=100;
        //    money.push(100);
        //}
        //this.director.run(money);

        //2.求pi,蒙特卡洛
        //初始化数据
        // this.canvas.height= this.canvas.width = Math.min(this.canvas.height,this.canvas.width);
        // let circle = new Circle(this.canvas.width/2,this.canvas.height/2,this.canvas.width/2);
        // let points = [];
        // let N = 10000;//打点的数
        // var insideC = [];//变量是传值,对象是传址
        // this.director.run2(circle,points,N,insideC);

        //3.排序
        // let arr = [3, 4, 6, 7, 1, 2, 5, 9, 10, 8];
        // this.dataStore.put('arg',[3, 4, 6, 7, 1, 2, 5, 9, 10, 8]);
        // this.director.run3(arr,0);//选择排序
        // this.director.run4(arr,1);//插入排序


        let maze = "#####################################################################################################\n                                    #     #     #   #     # # #               # # # # #   #   #   # #\n# # # ### # ############# ### # ##### ##### ##### ### ##### # # ####### ####### # # # # ### ### ### #\n# # #   # #       #   # #   # # #       # #   # #         #           # # #               # # # # # #\n### # # ### ####### ### ######### ####### # ### # ######### ### ######### # ############### # # # # #\n#   # # #           # #   #   # #                   # #   # # # # # # # #     # # #     #           #\n### ####### # # # ### # ### ### # ### ##### ######### # ### # ### # # # # ##### # # ##### ###########\n#         # # # #       #   # #     #     #         # #         # #   #       # # # # # #     # #   #\n# # # ####### ### ### ### ### # ##### ############### # ##### ### # ### ####### # # # # # ##### # ###\n# # #   # #   #     #   #   #       #   #   # # # # #     # #             # # # # #   # #     #   # #\n### # ### ### ### ### ### ### ########### ### # # # # ##### ### ### # # ### # # # # ### # ####### # #\n#   # # #       # #       #                             # #   # # # # #               # #     #   # #\n# # ### ### # ### ### # ### ##### # # ####### # # # ##### # ##### ######### # # # # ### # ####### # #\n# #       # #   # #   #         # # #       # # # # # # #                 # # # # #         # # #   #\n# # # ### # # ####### # # # ##### ### # # ####### ### # # ### ### ##### # ######### # # # ### # # ###\n# # #   # # #   #     # # #     #   # # #     # #           #   #     # #     #     # # #           #\n# ### ####### ##### # # # # ######### ### # ### ####### # ######### ##### ####### # # # # ### # # # #\n# #       #       # # # # #       #     # #           # #         #     #   #     # # # #   # # # # #\n# # # # # # # # # ### ##### # ####### ##### # ### # ##### # ####### ########### # ##### # ######### #\n# # # # # # # # #   #     # #     # #     # #   # #   # # #     #           #   #     # #       #   #\n# # ### # # ### # ### # ### # # ### ######### # # # ### ######### # ############# # # ### ######### #\n# #   # # # #   # #   #   # # #             # # # #             # # # # # #   # # # #   #         # #\n# # # # # ##### # # # ##### # ### # # ### # # ##### # ### # ######### # # ### # ##### # # # # # ### #\n# # # # # #     # # #     # #   # # #   # # #     # #   # #       # # # #   #       # # # # # # # # #\n# # # # ##### # # # # # ### # # # ### ####### # ### # ### # # # ### # # # ### ####### # ### ##### ###\n# # # # #     # # # # #   # # # #   #       # #   # # # # # # #                     # #   # # # # # #\n# ##### ### # # ##### # ### ### # ########### ######### ### ####### # # # # ##### ##### ##### # # # #\n#   # # #   # #     # #   # # # #       # # #             # # #   # # # # #     #     #   #         #\n# ### ##### ### ##### # ##### ### # # ### # ####### # # ##### # ##### # ### # ### ##### ### ### # # #\n# #         #       # #         # # #             # # #     #       # #   # #   # #   #       # # # #\n### ####### ### # ################### ### ####### ####### ### ### # # # # # # ##### ##### # #########\n#   #         # #                   #   #       #       #       # # # # # # #           # #   #     #\n# # ####### ##### # # ### # # # # ### ### ### ##### # ##### # ############### # ### # ### # ### #####\n# #   #         # # #   # # # # # #     #   #     # #     # #   # # # #   # # #   # # #   #         #\n# # ####### ######### ##### # ### # # ### # # # ##### # ### # ### # # # ### ### # ##### # # # # # # #\n# # # #         #         # #   # # #   # # # #     # #   # #                 # #     # # # # # # # #\n##### ##### # ##### # # # # # # ##### ##### ### ##### # ##### # # # # ################# ### ####### #\n#           #   #   # # # # # #     #     #   #     # #     # # # # #           #     #   #       # #\n### ### # # # ### # ####### ##### ### # ##### # # ##### # # # # # ### ##### ##### ##### ### # ### ###\n# # #   # # #   # #       #     # #   #     # # #   #   # # # # # #       #           #   # #   #   #\n# ##### ##### ### # # ##### # ##### # # # ##### # ##### # # ######### # ##### # ####### ### # ##### #\n#         #     # # #     # #     # # # #     # #     # # #     #     #     # #       #   # #     # #\n# ### # ##### ####### ####### ################# # ####### # ######### # # ##### # ############# #####\n# #   # #       #           # # # #         # # #       # #     #     # #     # #       #     # # # #\n# ### ### # # # # # # ##### ### # # ### # ### ### # # ##### ##### ### ### ############### ####### # #\n# #     # # # # # # #     #           # #       # # #   # #   # # #     #         #     #     # #   #\n# ### ####### ### # ####### ### # ####### # ######### ### ##### ##### ############# ##### ##### # ###\n# #   # # #     # #       #   # #     # # #         #             #             #           # #     #\n# ##### # ### ##### ### ### ##### # ### ### ##### # # # # # # # ##### # # # # ### ########### # #####\n# #               #   # #       # #   # # #     # # # # # # # #     # # # # #         #             #\n# ##### # # # # # # ####### # ##### ### # ##################### # # ########### # ##### ### ### # ###\n# # #   # # # # # #     #   #   #               # # # # # #   # # #           # #     #   #   # #   #\n### ### ### ### # # # ### # # # ### # # # ####### # # # # # ########### # # # ### # ### ### ##### # #\n#       #     # # # #   # # # # #   # # #         #   # #       #     # # # #   # #       #   #   # #\n####### ### # ### ####### ##### # # # ### # # ##### ### # ####### ####### # # ### # # # ########### #\n#         # # #     #   #     # # # # #   # #         #     # #     #   # # #   # # # #     #   # # #\n####### ### # ### ### ### # ####### # # # # # # ### ### ##### # ##### ####### ### # # # ####### # ###\n#   #     # # #         # # #   #   # # # # # #   # #               # # #   #   # # # #   # # #     #\n### ### ######### # # ####### ##### # # # ##### ##### ### # # # ##### # # ### ######### ### # # #####\n#             #   # #     # #   #   # # # #             # # # #   #         #   # # # #       #     #\n##### # # # # ### # # ##### # ##### ##### ### # ### # ####### ##### ### # ####### # # ### ##### #####\n#     # # # #   # # #     # # #   # #       # #   # #       #         # #     #   #     # # # #     #\n##### ####### # ### # ##### # # ####### # # ### ### # ### ### ### # ####### ##### # ####### # # ### #\n#         #   #   # #                 # # # #     # #   #   #   # # # # # #   # # #   # # #       # #\n# # # # ##### ####### ### # # # ### ### # # # # # ################### # # ##### # # ### # # #########\n# # # #     #     #     # # # #   #   # # # # # #     # #           # # # # # # #             # #   #\n# ##### ##### ##### # ##### ### ########### # # # # ### # ### # ##### # # # # # # ####### ##### # ###\n# #         #     # #     #   #     #     # # # # #         # #           #             #           #\n# ##### # ########### # # # # # ##### ### # ### # # # # ######### # # # ### ### # ### ### ### # #####\n# # #   #           # # # # # #         # # #   # # # #         # # # #       # #   # #     # #     #\n### ### # ### # ############# # # # ########### # ### # # ### ##### # # # # ##### ### ### ##### #####\n#       #   # #             # # # #   # #     # # #   # #   #     # # # # #     #   # # # # # #   # #\n### # # # # ### # # # ##### ### ### ### # ##### ##### # # # ############### # ######### ### # ##### #\n#   # # # #   # # # #     #   #   #           # #     # # #           #     # # # # # #             #\n# # ### ########### # # ########### # # # # # ##### # # ### ##### ####### # ### # # # ### ### ##### #\n# # #         # # # # #           # # # # # #   #   # #   #     #     #   #           # #   # #   # #\n# # ### ### ### # ##### # # # ##### # ### ### ### # # # ##### # # # ##### # ### # ##### # ##### #####\n# # #     # #       #   # # #     # #   #   # #   # # #     # # # #     # #   # #                 # #\n# ##### ##### ### ##### ##### ##### ##### # # ### ### # # ####### # ##### # # ##### ### # # # ##### #\n# #             #     #   #       #     # # # #     # # #     #   #     # # #     #   # # # #       #\n# # # # # # # ### # ##### # # # ### ####### # # # # # ### ####### # ######### # # # ### ##### # # # #\n# # # # # # #   # #     # # # #   #       # # # # # # #       #   #     # #   # # #   #     # # # # #\n##### # # # ####### # ######### ### ####### # # ######### # # ### ####### ### # ######### ###########\n#     # # #       # # # # # #     #     # # # #       #   # # #             # #         #     # #   #\n# # ### ### # ##### ### # # ### ######### ##### # # ##### ####### # ### # ##### # ### ### # ### # ###\n# # #   #   #     #         #       #         # # #   #       #   #   # #   #   #   #   # #         #\n# ######### # ##### # # # ##### # ### ####### # # # ##### # ####### ##### ### # # ### ### # # # # ###\n# #         #     # # # #     # #   #       # # # #   #   # #           #   # # # # #   # # # # #   #\n### # ### # # ####### # # # ######### ############# ##### # ####### ##### # ### ### ######### # # # #\n#   # #   # #     # # # # #                   # #       # #   #         # # #             #   # # # #\n### ######### ##### ### ### # # ### # ######### ### # # ### # ### # # ### # ### # # ######### #######\n#   #                 # #   # #   # #       #     # # #   # # #   # #   # # #   # #         #       #\n############# ### # # # ### # # # ### ### ##### ################### ##### # ### ### ### # ### # # # #\n#               # # # #   # # # #   #   #   # #   #   # # # #           # # #     #   # #   # # # # #\n### # ##### # # # ##### ### # # # # # ####### # ### ### # # ### # # # ##### # # ### # # # # ### # # #\n#   # #     # # # # # # #   # # # # #                         # # # #     # # #   # # # # #   # # # #\n### ##### # # ##### # ##### # ### # # # # # # # ### # # # # ##### # # # ####### # ##### ### # ##### #\n#   #     # #             # #   # # # # # # # #   # # # # #     # # # #     #   #     # #   #     # #\n### # # # ### ####### ### # # ##### ##### # ### ####### # # # # ### # # # ##### # # ### ### # # # # #\n#   # # # #         #   # # #     #     # # #         # # # # #   # # # #   #   # #   # #   # # # #  \n#####################################################################################################";
        console.log(maze.split('\n'));
        maze = maze.split('\n');

        let entranceX = 1, enteranceY = 0, exitX = maze.length - 2, exitY = maze.length - 1;
        let visited = [];
        let path = [];
        for (let i = 0; i < maze.length; i++) {
            visited[i] = [];
            path[i] = [];
            for (let j = 0; j < maze[i].length; j++) {
                visited[i][j] = false;
                path[i][j] = false;
            }
        }

        this.director.run5(maze,visited,entranceX,enteranceY,exitX,exitY,entranceX,enteranceY,path);

    }
}
